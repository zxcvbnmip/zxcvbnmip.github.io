<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>archlinux安装及配置</title>
      <link href="/2024/12/24/archlinux%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
      <url>/2024/12/24/archlinux%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h4 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h4><ol><li><pre><code>一个U盘</code></pre></li><li><pre><code>archlinux [ISO镜像](https://mirrors.aliyun.com/archlinux/iso/2024.12.01/)</code></pre></li></ol><h3 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h3><ol><li><pre><code>进入bios,选择从U盘启动</code></pre></li><li><pre><code>禁用reflector</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop reflector.service</span><br></pre></td></tr></table></figure></li><li>检查<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status reflector.service</span><br></pre></td></tr></table></figure></li><li>更改国内源<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/pacman.d/mirrorlist</span><br></pre></td></tr></table></figure>改为以下内容<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Server = https://mirrors.ustc.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span> <span class="comment"># 中国科学技术大学开源镜像站</span></span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span> <span class="comment"># 清华大学开源软件镜像站</span></span><br><span class="line">Server = https://repo.huaweicloud.com/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span> <span class="comment"># 华为开源镜像站</span></span><br><span class="line">Server = http://mirror.lzu.edu.cn/archlinux/<span class="variable">$repo</span>/os/<span class="variable">$arch</span> <span class="comment"># 兰州大学开源镜像站</span></span><br></pre></td></tr></table></figure></li><li>archinstall脚本安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">archinstall</span><br></pre></td></tr></table></figure><blockquote><p>mirror region选择china的话，连接163镜像可能会很慢，还请使用变量挂代理。</p><blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;<span class="built_in">export</span> http_proxy=http://127.0.0.1:7890</span><br></pre></td></tr></table></figure><p>locale设置zh_CN.UTF-8的话，桌面环境可能会出现字体问题，需要额外安装包<code>noto-fonts-cjk</code> <code>wqy-bitmapfont</code> <code>wqy-zenhei</code></p></blockquote></blockquote></li></ol><h3 id="安装完成开始配置"><a href="#安装完成开始配置" class="headerlink" title="安装完成开始配置"></a>安装完成开始配置</h3><ol start="6"><li><pre><code>等待更新完成，更新仓库</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -Syy</span><br></pre></td></tr></table></figure></li><li><pre><code>安装必备软件</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S git p7zip docker docker-compose timeshift fcitx5 fcitx5-im fcitx5-chinese-addons fcitx5-anthy</span><br></pre></td></tr></table></figure></li><li><h5 id="设置代理"><a href="#设置代理" class="headerlink" title="设置代理"></a>设置代理</h5></li></ol><p>把mihomo配置文件们放到<code>/etc/mihomo</code>下,直接设置777权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> 777 -R /etc/mihomo</span><br></pre></td></tr></table></figure><p>把mihomo二进制可执行文件<code>mihomo</code>放到<code>/usr/local/bin/</code>并给予可执行权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> +x /usr/local/bin/mihomo</span><br></pre></td></tr></table></figure><p>创建运行服务，先进入<code>/etc/systemd/system/</code>,新建<code>mihomo.service</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/systemd/system/</span><br><span class="line"><span class="built_in">sudo</span> vim mihomo.service</span><br></pre></td></tr></table></figure><p>内容为下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=mihomo Daemon, Another Clash Kernel.</span><br><span class="line">After=network.target NetworkManager.service systemd-networkd.service iwd.service</span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">LimitNPROC=500</span><br><span class="line">LimitNOFILE=1000000</span><br><span class="line">CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_RAW CAP_NET_BIND_SERVICE CAP_SYS_TIME CAP_SYS_PTRACECAP_DAC_READ_SEARCH CAP_DAC_OVERRIDE</span><br><span class="line">AmbientCapabilities=CAP_NET_ADMIN CAP_NET_RAW CAP_NET_BIND_SERVICE CAP_SYS_TIME CAP_SYS_PTRACE CAP_DAC_READ_SEARCH CAP_DAC_OVERRIDE</span><br><span class="line">Restart=always</span><br><span class="line">ExecStartPre=/usr/bin/sleep 1s</span><br><span class="line">ExecStart=/usr/local/bin/mihomo -d /etc/mihomo</span><br><span class="line">ExecReload=/bin/kill -HUP <span class="variable">$MAINPID</span></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>重载systemd：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>启用并启动mihomo:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> mihomo</span><br><span class="line"><span class="built_in">sudo</span> systemctl start mihomo</span><br></pre></td></tr></table></figure><p>查看运行状态:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl status mihomo</span><br></pre></td></tr></table></figure><p>查看日志：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">journalctl -u mihomo -o <span class="built_in">cat</span> -e</span><br></pre></td></tr></table></figure><ol start="9"><li><h5 id="配置paru"><a href="#配置paru" class="headerlink" title="配置paru"></a>配置paru</h5></li></ol><p>安装必要组件并克隆paru源代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S --needed base-devel</span><br><span class="line">git <span class="built_in">clone</span> https://aur.archlinux.org/paru.git</span><br></pre></td></tr></table></figure><p>编译并安装paru</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> paru</span><br><span class="line">makepkg -si</span><br></pre></td></tr></table></figure><p>启用paru颜色,取消<code>#Color</code>的注释</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/pacman.conf</span><br></pre></td></tr></table></figure><p>paru基本命令：</p><ul><li><code>paru &lt;用户输入&gt;</code> : 搜索并安装“用户输入”</li><li><code>paru -</code> : <code>paru -Syu</code>的别名</li><li><code>paru -Sua</code> : 仅升级 AUR 包。</li><li><code>paru -Qua</code> : 打印可用的 AUR 更新</li><li><code>paru -Gc &lt;用户输入&gt;</code> ： 显示“用户输入”的 AUR 评论</li></ul><ol start="10"><li><h5 id="配置VNC"><a href="#配置VNC" class="headerlink" title="配置VNC"></a>配置VNC</h5></li></ol><p>下载vncserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S tigervnc</span><br></pre></td></tr></table></figure><p>设置用户和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncpasswd</span><br></pre></td></tr></table></figure><p>编辑<code>/etc/tigervnc/vncserver.users</code>来定义用户映射。<br>该文件中定义的每个用户都会拥有对应的端口来运行会话。<br>默认情况下，:1 是 TCP 端口 5901 (5900+1如果需要运行一个并行的服务端，第二个实例可以运行在下一个最大的、未被占用的端口，即 5902 (5900+2)。<br>创建<code>~/.vnc/config</code>,内容为下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">session=xfce</span><br><span class="line">geometry=1920x1080</span><br><span class="line">localhost</span><br><span class="line">alwaysshared</span><br></pre></td></tr></table></figure><blockquote><p><code>session=foo</code> （将foo替换为你想要运行的桌面环境）。<br>你可以通过查看 &#x2F;usr&#x2F;share&#x2F;xsessions&#x2F; 里的 .desktop 文件来知道有哪些桌面环境在当前系统上可以使用。<br>    创建vncserver服务，复制示例文件</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/lib/systemd/system/vncserver.service /etc/systemd/system/vncserver@:1.service</span><br></pre></td></tr></table></figure><p>创建<code>~/.vnc/.xtartup</code>,内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xrdb ~/.Xresource</span><br><span class="line">startxfce4</span><br></pre></td></tr></table></figure><p>启用vncserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> vncserver@:1.service</span><br><span class="line"><span class="built_in">sudo</span> systemctl start vncserver@:1.service</span><br></pre></td></tr></table></figure><ol start="11"><li><h5 id="配置x0vncserver"><a href="#配置x0vncserver" class="headerlink" title="配置x0vncserver"></a>配置x0vncserver</h5></li></ol><p>直接启动x0vncserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x0vncserver -rfbauth ~/.vnc/passwd</span><br></pre></td></tr></table></figure><p>使用systemd启停x0vncserver<br>创建<code>/etc/systemd/system/x0vncserver.service</code>，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/systemd/system/</span><br><span class="line"><span class="built_in">sudo</span> vim x0vncserver.service</span><br></pre></td></tr></table></figure><p>内容如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Remote desktop service (VNC) <span class="keyword">for</span> :0 display</span><br><span class="line">Requires=display-manager.service</span><br><span class="line">After=network-online.target</span><br><span class="line">After=display-manager.service</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">Environment=HOME=/root</span><br><span class="line">Environment=XAUTHORITY=/var/run/lightdm/root/:0</span><br><span class="line">ExecStart=x0vncserver -display :0 -rfbauth <span class="variable">$XDG_CONFIG_HOME</span>/tigervnc/passwd</span><br><span class="line">Restart=on-failure</span><br><span class="line">RestartSec=500ms</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p>启用x0vncserver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> x0vncserver</span><br><span class="line"><span class="built_in">sudo</span> systemctl start x0vncserver</span><br></pre></td></tr></table></figure><ol start="12"><li><h5 id="配置输入法"><a href="#配置输入法" class="headerlink" title="配置输入法"></a>配置输入法</h5></li></ol><p>安装相关软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-im</span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-chinese-addons</span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-mozc</span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-pinyin-moegirl</span><br><span class="line"><span class="built_in">sudo</span> pacman -S fcitx5-material-color</span><br></pre></td></tr></table></figure><p>设置环境变量,<code>~/.config/environment.d/im.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.config/environment.d/</span><br><span class="line">vim im.conf</span><br></pre></td></tr></table></figure><p>内容为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># fix fcitx problem</span></span><br><span class="line">GTK_IM_MODULE=fcitx</span><br><span class="line">QT_IM_MODULE=fcitx</span><br><span class="line">XMODIFIERS=@im=fcitx</span><br><span class="line">SDL_IM_MODULE=fcitx</span><br><span class="line">GLFW_IM_MODULE=ibus</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>删除在C盘以外的盘符创建的恶心的porgramfiles文件夹</title>
      <link href="/2024/09/05/%E5%88%A0%E9%99%A4%E5%9C%A8C%E7%9B%98%E4%BB%A5%E5%A4%96%E7%9A%84%E7%9B%98%E7%AC%A6%E5%88%9B%E5%BB%BA%E7%9A%84%E6%81%B6%E5%BF%83%E7%9A%84porgramfiles%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2024/09/05/%E5%88%A0%E9%99%A4%E5%9C%A8C%E7%9B%98%E4%BB%A5%E5%A4%96%E7%9A%84%E7%9B%98%E7%AC%A6%E5%88%9B%E5%BB%BA%E7%9A%84%E6%81%B6%E5%BF%83%E7%9A%84porgramfiles%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<h2 id="狗操的微软"><a href="#狗操的微软" class="headerlink" title="狗操的微软"></a>狗操的微软</h2><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><h4 id="1-打开注册表编辑器"><a href="#1-打开注册表编辑器" class="headerlink" title="1.打开注册表编辑器"></a>1.打开注册表编辑器</h4><p>定位到<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\PackageVolumes</code><br>在这里会有多个子项 1、2、3….，看下1应该是指向C盘的，2指向D盘，删除除了1以外的所有子项，然后把PackageVolumes项右侧的 NextVolumeIndex的值改成2。重启以后，我的RamDisk分区没有再自动创建Program Files。</p><h4 id="2-卸载xbox"><a href="#2-卸载xbox" class="headerlink" title="2.卸载xbox"></a>2.卸载xbox</h4><p>系统设置中找到游戏服务，卸载它，再次打开xbox它将被重新安装，此时会再次生成一个programfile的目录，将他删除，之后便不会再生成文件夹（其实还需要重复上一步清除注册表。</p><p>form:<a href="https://bbs.pcbeta.com/viewthread-1978808-2-1.html">来源</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 微软 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scoop安装及使用</title>
      <link href="/2024/08/13/scoop%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
      <url>/2024/08/13/scoop%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用ssh密钥完成github commit的认证</title>
      <link href="/2024/07/26/%E4%BD%BF%E7%94%A8ssh%E5%AF%86%E9%92%A5%E5%AE%8C%E6%88%90github-commit%E7%9A%84%E8%AE%A4%E8%AF%81/"/>
      <url>/2024/07/26/%E4%BD%BF%E7%94%A8ssh%E5%AF%86%E9%92%A5%E5%AE%8C%E6%88%90github-commit%E7%9A%84%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<p>开源项目的维护者如何确保项目的代码没有被黑客入侵？通过使用 SSH 对代码进行签名。方法如下。</p><h4 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h4><h5 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h5><p>从ubuntu软件仓库安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install git -y </span><br></pre></td></tr></table></figure><p>亦或是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> add-apt-repository ppa:git-core/ppa</span><br><span class="line"><span class="built_in">sudo</span> apt update &amp;&amp; apt install git</span><br></pre></td></tr></table></figure><blockquote><p>其他系统可以从<a href="https://git-scm.com/downloads">git官网</a>安装</p></blockquote><h5 id="创建ssh密钥"><a href="#创建ssh密钥" class="headerlink" title="创建ssh密钥"></a>创建ssh密钥</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>生成的密钥将保存在<code>~/.ssh</code>内</p><h5 id="前往或创建一个本地仓库"><a href="#前往或创建一个本地仓库" class="headerlink" title="前往或创建一个本地仓库"></a>前往或创建一个本地仓库</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p project &amp;&amp; <span class="built_in">cd</span> project</span><br><span class="line">git init</span><br></pre></td></tr></table></figure><h3 id="开始配置git"><a href="#开始配置git" class="headerlink" title="开始配置git"></a>开始配置git</h3><h4 id="配置基础信息"><a href="#配置基础信息" class="headerlink" title="配置基础信息"></a>配置基础信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;username&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;email&quot;</span></span><br></pre></td></tr></table></figure><h4 id="启用gpg签名"><a href="#启用gpg签名" class="headerlink" title="启用gpg签名"></a>启用gpg签名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global commit.gpgsign <span class="literal">true</span></span><br><span class="line">git config --global gpg.format ssh</span><br></pre></td></tr></table></figure><h4 id="填充ssh密钥"><a href="#填充ssh密钥" class="headerlink" title="填充ssh密钥"></a>填充ssh密钥</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -L</span><br></pre></td></tr></table></figure><blockquote><p>  如果发生错误，请使用如下命令：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(ssh-agent)</span>&quot;</span></span><br></pre></td></tr></table></figure><br>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eval $(ssh-agent -c)</span><br></pre></td></tr></table></figure><br>然后输出以下内容:</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCUlMZBvT363Qpg1PM9LzJHwP/ijaPD+0O7l24TchGoqVItu9N6PsnXigVT21VTNemltSfChS6A2qDPMsXKbeiK7It9tMcTDyeBJd2e9rdlzQ05cHQ65jerVIe9pyc/asbX0jtlm0+VcB0fim3gVHlVcR8a6DWrqijU5YXYt3jUzdleHv9XmRJANTRAOpPICTnkO4G9HyNgJeI9M2baFgSwiNohVFHG8KJI1rXM64ryr7Psgr/5DihYSbFfTinI731ZpA3qogIaUlyKDAP7t8Xt7ntSeIzsSfd8A8jiGeYdme+MyUBo/2ENb0UmKYI695Cf6Ua+DGR39j8kt2jGw3rgkkA3L9i2+v+6aHeMzzdgR1FFIsXHs3pfDO05+u1CUgclujamsJdreEbuEwLFHQGQ60m3it7J0T/JGRUcgvQeIukslCyFzz2Rj3j0aSsyVTeVTj7f3rZyWZJlSTVyFv5uMpfm62YzA5hPCPrMJg7XHpUbP4VkWkeTfAalTTtYz34= jack@docker1</span><br></pre></td></tr></table></figure><p>如下命令设置签名密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.signingkey <span class="string">&quot;KEY&quot;</span></span><br><span class="line">git commit --allow-empty --message=<span class="string">&quot;Did SSH signing work?&quot;</span></span><br></pre></td></tr></table></figure><h4 id="配置-SignersFile"><a href="#配置-SignersFile" class="headerlink" title="配置 SignersFile"></a>配置 SignersFile</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global gpg.ssh.allowedSignersFile ~/.ssh/allowed_signers</span><br><span class="line"><span class="built_in">touch</span> ~/.ssh/allowed_signers</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;EMAIL ssh-rsa KEY&quot;</span> &amp;gt; ~/.ssh/allowed_signers</span><br></pre></td></tr></table></figure><h4 id="查看效果"><a href="#查看效果" class="headerlink" title="查看效果"></a>查看效果</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git show --show-signature</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> ssh </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/21/hello-world/"/>
      <url>/2024/07/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
